datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
  schemas    = ["public"]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres", "postgresqlExtensions", "multiSchema"]
}

model Acta {
  id         Int       @id @default(autoincrement())
  nombreActa String    @db.VarChar(255)
  reunionId  Int
  Reuniones  Reuniones @relation(fields: [reunionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_acta_reunion")
  ...auditFields
  @@schema("public")
}

model Actividad {
  id      Int     @id @default(autoincrement())
  nombre  String  @db.VarChar(255)
  tipo    String?  @db.VarChar(255)
  acta    String?
  grupoId Int
  grupo   grupo   @relation(fields: [grupoId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_actividad_grupo")
  Tarea   Tarea[]
  ...auditFields
  @@schema("public")
}

model FechaProgramada {
  id        Int      @id @default(autoincrement())
  fechaHora DateTime @db.Timestamp(6)
  tareaId   Int
  Tarea     Tarea    @relation(fields: [tareaId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_fechaprogramada_tarea")
  ...auditFields
  @@schema("public")
}

model Reuniones {
  id                  Int       @id @default(autoincrement())
  nombreReunion       String    @db.VarChar(255)
  fechaReunion        DateTime  @db.Timestamp(6)
  fechaSegundaReunion DateTime? @db.Timestamp(6)
  modalidad           String?
  link                String?
  direccion           String?
  grupoId             Int
  Acta                Acta[]
  grupo               grupo     @relation(fields: [grupoId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_reuniones_grupo")
  ...auditFields
  @@schema("public")
}

model Tarea {
  id              Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(255)
  responsableId   Int
  actividadId     Int
  resultado       String?
  acta            String?
  listParty       String?
  FechaProgramada FechaProgramada[]
  Actividad       Actividad         @relation(fields: [actividadId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tarea_actividad")
  usuario         User              @relation(fields: [responsableId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tarea_responsable")
  ...auditFields
  @@schema("public")
}

model TareaUsuario {
  id        Int   @id @default(autoincrement())
  grupoId   Int
  usuarioId Int
  usuario   User  @relation(fields: [usuarioId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tareausuario_usuario")
  grupo     grupo @relation(fields: [grupoId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tareausuario_grupo")
  ...auditFields
  @@schema("public")
}

model grupo {
  id              Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(200)
  periodo_inicio  DateTime?         @db.Date
  periodo_fin     DateTime?         @db.Date
  mesabosques     Boolean  @default(false)
  fecha_crea      DateTime?         @default(now())
  fecha_modifica  DateTime?
  fecha_elimina   DateTime?
  Actividad       Actividad[]
  Reuniones       Reuniones[]
  TareaUsuario    TareaUsuario[]
  documentosGrupo documentosGrupo[]
  ...auditFields
  @@schema("public")
}

model documentos {
  id                Int             @id @default(autoincrement())
  titulo            String          @db.VarChar(200)
  tipoVizualizacion String          @db.VarChar(200)
  fecha_crea        DateTime?       @default(now())
  fecha_modifica    DateTime?
  fecha_elimina     DateTime?
  subdocumentos     Subdocumentos[]
  ...auditFields
  @@schema("public")
}

model Subdocumentos {
  id             Int        @id @default(autoincrement())
  tituloSub      String     @db.VarChar(200)
  nombreArchivo  String?    @db.VarChar(200)
  documentosId   Int
  fecha_crea     DateTime?  @default(now())
  fecha_modifica DateTime?
  fecha_elimina  DateTime?
  documentos     documentos @relation(fields: [documentosId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ...auditFields
  @@schema("public")
}

model documentosGrupo {
  id             Int       @id @default(autoincrement())
  nombre         String    @db.VarChar(200)
  descripcion    String?   @db.VarChar(200)
  nombreArchivo  String?   @db.VarChar(200)
  grupoId        Int
  fecha_crea     DateTime? @default(now())
  fecha_modifica DateTime?
  fecha_elimina  DateTime?
  ...auditFields
  grupo grupo @relation(fields: [grupoId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}
